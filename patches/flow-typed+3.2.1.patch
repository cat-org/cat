diff --git a/node_modules/flow-typed/dist/lib/codeSign.js b/node_modules/flow-typed/dist/lib/codeSign.js
index 9745ac9..0b3be57 100644
--- a/node_modules/flow-typed/dist/lib/codeSign.js
+++ b/node_modules/flow-typed/dist/lib/codeSign.js
@@ -34,13 +34,7 @@ function signCode(code, version) {
 }
 
 function signCodeStream(version) {
-  let code = '';
-  return (0, _through.default)(function write(data) {
-    code += data;
-  }, function end() {
-    this.emit('data', signCode(code, version));
-    this.emit('close');
-  });
+  return (code) => signCode(code, version);
 }
 
 const HASH_COMMENT_RE = /\/\/ flow-typed signature: (.*)$/;
diff --git a/node_modules/flow-typed/dist/lib/fileUtils.js b/node_modules/flow-typed/dist/lib/fileUtils.js
index 8d96df8..a21e8a7 100644
--- a/node_modules/flow-typed/dist/lib/fileUtils.js
+++ b/node_modules/flow-typed/dist/lib/fileUtils.js
@@ -32,20 +32,24 @@ function copyDir(srcPath, destPath) {
 
 function copyFile(srcPath, destPath, preProcessor) {
   return new Promise((res, rej) => {
-    const reader = _node.fs.createReadStream(srcPath);
-
-    reader.on('error', rej);
-
-    const writer = _node.fs.createWriteStream(destPath);
-
-    writer.on('error', rej);
-    writer.on('close', res);
-
     if (preProcessor) {
-      reader.pipe(preProcessor);
-      preProcessor.pipe(writer);
+      const content = _node.fs.readFileSync(srcPath, 'utf-8');
+
+      _node.fs.writeFile(destPath, preProcessor(content), err => {
+        if (err) {
+          rej(err);
+        } else {
+          res();
+        }
+      });
     } else {
-      reader.pipe(writer);
+      _node.fs.copyFile(srcPath, destPath, err => {
+        if (err) {
+          rej(err);
+        } else {
+          res();
+        }
+      });
     }
   });
 }
diff --git a/node_modules/flow-typed/dist/lib/node.js b/node_modules/flow-typed/dist/lib/node.js
index 139b84b..69dcb7a 100644
--- a/node_modules/flow-typed/dist/lib/node.js
+++ b/node_modules/flow-typed/dist/lib/node.js
@@ -95,6 +95,7 @@ const fs = {
   appendFile: _fsExtra.default.appendFile,
   close: _fsExtra.default.close,
   copy: _fsExtra.default.copy,
+  copyFile: _fsExtra.default.copyFile,
   createReadStream: _fsExtra.default.createReadStream,
   createWriteStream: _fsExtra.default.createWriteStream,
   exists: _fsExtra.default.exists,
@@ -102,6 +103,7 @@ const fs = {
   open: _fsExtra.default.open,
   readdir: _fsExtra.default.readdir,
   readFile: _fsExtra.default.readFile,
+  readFileSync: _fsExtra.default.readFileSync,
   rename: _fsExtra.default.rename,
   rmdir: _fsExtra.default.rmdir,
   stat: _fsExtra.default.stat,
